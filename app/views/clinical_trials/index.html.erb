<p id="notice"><%= notice %></p>

<h1>Listing Clinical Trials</h1>

<table>
  <thead>
    <tr>
      <th>Title</th>
      <th>Image</th>
      <th>Pdf</th>
      <th colspan="3"></th>
    </tr>
  </thead>

  <tbody>
    <% @clinical_trials.each do |clinical_trial| %>
      <tr>
        <td><%= clinical_trial.title %></td>
        <td><%= clinical_trial.image %></td>
        <td><%= clinical_trial.pdf %></td>
        <td><%= link_to 'Show', clinical_trial %></td>
        <td><%= link_to 'Edit', edit_clinical_trial_path(clinical_trial) %></td>
        <td><%= link_to 'Destroy', clinical_trial, method: :delete, data: { confirm: 'Are you sure?' } %></td>
      </tr>
    <% end %>
  </tbody>
</table>
<iframe src="http://s3.amazonaws.com/drroebuck/clinical_trials/pdfs/000/000/001/original/CAIS-app-proposal.pdf?1464038032#toolbar=0&navpanes=0&scrollbar=0" width="800" height="500" style="border:none;" frameborder="0">

<br>


<script>
console.log('pdf working')
    // URL of PDF document
    var url = 'http://s3.amazonaws.com/drroebuck/clinical_trials/pdfs/000/000/001/original/CAIS-app-proposal.pdf?1464038032';

    // Asynchronous download PDF
    PDFJS.getDocument(url)
      .then(function(pdf) {
        return pdf.getPage(1);
      })
      .then(function(page) {

  // Set scale (zoom) level
  var scale = 1.5;

  // Get viewport (dimensions)
  var viewport = page.getViewport(scale);

  // Get div#the-svg
  var container = document.getElementById('the-svg');

  // Set dimensions
  container.style.width = viewport.width + 'px';
  container.style.height = viewport.height + 'px';

  // SVG rendering by PDF.js
  page.getOperatorList()
    .then(function (opList) {
      var svgGfx = new PDFJS.SVGGraphics(page.commonObjs, page.objs);
      return svgGfx.getSVG(opList, viewport);
    })
    .then(function (svg) {
      container.appendChild(svg);
    });

});
</script>
